
[DEVELOPMENT_DainaLogger] (
		String, 
		Data, 
		ObserverOfDainaTokenAsHumanReadableString,
		Sequence,
		DEVELOPMENT_Logger,
		DainaToken,
		Sequences
	)
{
	:: logSequenceOfDainaTokens *([Sequence<[DainaToken]>] sequenceOfDainaTokens) {
		\[DEVELOPMENT_Logger]:logString (\[String]:stringFromLiteral "{ ");
		\[Sequences<[DainaToken]>]:iterateThroughSequenceWithReceiver sequenceOfDainaTokens receiveAndLogDainaToken;
		\[DEVELOPMENT_Logger]:logStringLine (\[String]:stringFromLiteral "}");
	}	!{
			[ObserverOfDainaTokenAsHumanReadableString] observerWhichLogsDainaToken = \[ObserverOfDainaTokenAsHumanReadableString]:observerWithTokenStringReceiver (*([String] tokenAsString){
				\[DEVELOPMENT_Logger]:logString tokenAsString;
				\[DEVELOPMENT_Logger]:logString (\[String]:stringFromLiteral " ");
			}); 

			[[DainaToken]->] receiveAndLogDainaToken = *([DainaToken] t) {
				\t:observeTokenWithObserver observerWhichLogsDainaToken;
			};
		}
}

