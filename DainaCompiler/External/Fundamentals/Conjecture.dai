
@@

Conjecture : [Object]
	:: propose [ -> [Conjecture]]
	:: assume [ -> [Conjecture]]
	:: reject [ -> [Conjecture]]
	:: declareAs [[Boolean] -> [Conjecture]]
	++ declareTrue [ -> ]
	++ declareFalse [ -> ]
	++ isTrue [ -> [Boolean]]
	++ isFalse [ -> [Boolean]]
	++ notFalse [ -> [Boolean]]
	++ notTrue [ -> [Boolean]]
	
@@




[Conjecture : [Object]] (Boolean, Object)
	[Boolean] knownToBeTrue
	[Boolean] knownToBeFalse
{
	~ propose *{
		\::new;
		.knownToBeTrue = \[Boolean]:false;
		.knownToBeFalse = \[Boolean]:false;
	}

	~ assume *{
		\::propose;
		.knownToBeTrue = \[Boolean]:true;
	}

	~ reject *{
		\::propose;
		.knownToBeFalse = \[Boolean]:true;
	}

	~ declareAs *([Boolean] booleanForThisConjectureToBeDeclaredAs) {
		\::new;
		.knownToBeFalse = \[Boolean]:not booleanForThisConjectureToBeDeclaredAs;
		.knownToBeTrue = booleanForThisConjectureToBeDeclaredAs;
	}

	++ declareTrue *{
		.knownToBeTrue = \[Boolean]:true;
		.knownToBeFalse = \[Boolean]:false;
	}
	++ declareFalse *{
		.knownToBeFalse = \[Boolean]:true;
		.knownToBeTrue = \[Boolean]:false;
	}

	@++ isDecided *-> \[Boolean]:or .knownToBeTrue .knownToBeFalse

	++ isTrue *-> .knownToBeTrue
	++ isFalse *-> .knownToBeFalse

	++ notFalse *-> \[Boolean]:not .knownToBeFalse
	++ notTrue *-> \[Boolean]:not .knownToBeTrue
}












