
@@

CoreFlow : []
	:: repeatUntilStopped [[[ -> ] -> ] -> ]

@@




[CoreFlow] (Object, Boolean, Wrapper)
{
	:: repeatUntilStopped *([[->]->] lambdaToRepeatUntilStopped) {
		[Wrapper<[Boolean]>] wrappedShouldStop = \[Wrapper<[Boolean]>]:wrapperWithObject \[Boolean]:false;
		[Boolean] shouldStop = \[Boolean]:false;
		[->] stopCommand = *{\wrappedShouldStop:store \[Boolean]:true;};
	    	<instant
		##
			while (0==0) {
		##;
		\lambdaToRepeatUntilStopped stopCommand;
		shouldStop = \wrappedShouldStop:unwrap;
		<instant
		##
			if (!((struct Z_template_Boolean *)(Z_local_shouldStop))->Z_attribute_Boolean_internalBoolean) {
		##;
		<instant
		##
			} else {
				break;
			}
			}
		##;
	}
}


[Loops :[CoreFlow]] (CoreFlow, Boolean) {
	:: while *([->[Boolean]] condition, [->] action) {
		\[CoreFlow]:repeatUntilStopped *([->]stop) {
		[Boolean] conditionResult = \condition;
			\conditionResult:ifTrue action;
			\conditionResult:ifFalse stop;
		};
	}
}











