
[DainaCommandParser : [Object]] (String, Object, DainaCommandReceiver, DainaCommandStrings, Mapping, DainaCommandParsingAction)
	[Mapping<[String][DainaCommandParsingAction]>] mappingOfCommandStringToParsingAction
{
	~ newDainaCommandParser *() {
		\::newObject;
		.mappingOfCommandStringToParsingAction = mappingOfCommandStringToParsingAction
	} 	!{
			[Mapping<[String][DainaCommandParsingAction]>] mappingOfCommandStringToParsing = \[Mapping<[String][DainaCommandParsingAction]>]:newEmptyMapping;
			\mappingOfCommandStringToParsing:mapKeyToValue (\[DainaCommandStrings]:EXIT) (\[DainaCommandParsingAction]:parseCommandToExit)
			\mappingOfCommandStringToParsing:mapKeyToValue (\[DainaCommandStrings]:PARSE_DAINA_SOURCE_FILE) (\[DainaCommandParsingAction]:parseCommandToParseDainaSourceFile)
			\mappingOfCommandStringToParsing:mapKeyToValue (\[DainaCommandStrings]:ANALYSE_AND_SYNTHESISE_SYNTAX_TREE) (\[DainaCommandParsingAction]:parseCommandToAnalyseAndSynthesiseSyntaxTree)
			\mappingOfCommandStringToParsing:mapKeyToValue (\[DainaCommandStrings]:COMPILE_INTO_JAVA_WITHIN_DIRECTORY) (\[DainaCommandParsingAction]:parseCommandToCompileIntoJavaWithinDirectory)
			\mappingOfCommandStringToParsing:mapKeyToValue (\[DainaCommandStrings]:COMPILE_INTO_C_WITHIN_DIRECTORY) (\[DainaCommandParsingAction]:parseCommandToCompileIntoCWithinDirectory)
		}

	++ parseNextCommandAndSendToReceiverWithCommandStringSegmentProvider *([DainaCommandReceiver] dainaCommandReceiver, [->[String]] commandStringSegmentProvider) {
		[String] nextCommandString = \commandStringSegmentProvider;
		[Maybe<[DainaCommandParsingAction]>] maybeParsingActionForCommandString = \.mappingOfCommandStringToParsingAction:maybeRetriveMappedValueWithKey nextCommandString;
		[DainaCommandParsingAction] parsingActionForCommandString = \maybeParsingActionForCommandString:justThisOrAlternative (\[DainaCommandParsingAction]:parseInvalidCommand);
		\parsingActionForCommandString:performActionWithCommandStringSegmentProviderAndThenSendCommandToReceiver commandStringSegmentProvider dainaCommandReceiver;
	}	
}

[DainaCommandStrings] (String) -> (DainaCommandParser)
{
	:: EXIT *->(\[String]:newString "exit")
	:: PARSE_DAINA_SOURCE_FILE *->(\[String]:newString "parse dainasource")
	:: ANALYSE_AND_SYNTHESISE_SYNTAX_TREE *->(\[String]:newString "synthesise")
	:: COMPILE_INTO_JAVA_WITHIN_DIRECTORY *->(\[String]:newString "compileinto java")
	:: COMPILE_INTO_C_WITHIN_DIRECTORY *->(\[String]:newString "compileinto c")
} 


[DainaCommandParsingAction] (Object) -> (DainaCommandParser)
	[[->[String]][DainaCommandReceiver]->] parsingActionToParseCommandWithCommandStringSegmentProviderAndThenSendCommandToReceiver
{
	~ newParsingActionUsingParsingActionToParseCommandWithCommandStringSegmentProviderAndThenSendCommandToReceiver *([[->[String]][DainaCommandReceiver]->] parsingActionToParseCommandWithCommandStringSegmentProviderAndThenSendCommandToReceiver) {
		\::newObject;
		.parsingActionToParseCommandWithCommandStringSegmentProviderAndThenSendCommandToReceiver = parsingActionToParseCommandWithCommandStringSegmentProviderAndThenSendCommandToReceiver
	}

	++ performActionWithCommandStringSegmentProviderAndThenSendCommandToReceiver *([->[String]] commandStringSegmentProvider, [DainaCommandReceiver] dainaCommandReceiver) {
		\.parsingActionToParseCommandWithCommandStringSegmentProviderAndThenSendCommandToReceiver commandStringSegmentProvider dainaCommandReceiver
	}

	~ parseCommandToExit *{
		\::newParsingActionUsingParsingActionToParseCommandWithCommandStringSegmentProviderAndThenSendCommandToReceiver
			*([->[String]] getNextCommandStringSegment, [DainaCommandReceiver] dainaCommandReceiver) {
				\dainaCommandReceiver:receiveExitCommand
			}
	}

	~ parseCommandToParseDainaSourceFile *{
		\::newParsingActionUsingParsingActionToParseCommandWithCommandStringSegmentProviderAndThenSendCommandToReceiver
			*([->[String]] getNextCommandStringSegment, [DainaCommandReceiver] dainaCommandReceiver) {
				\dainaCommandReceiver:receiveCommandToParseDainaSourceFileWithPath (\getNextCommandStringSegment)
			}
	}

	~ parseCommandToAnalyseAndSynthesiseSyntaxTree *{
		\::newParsingActionUsingParsingActionToParseCommandWithCommandStringSegmentProviderAndThenSendCommandToReceiver
			*([->[String]] getNextCommandStringSegment, [DainaCommandReceiver] dainaCommandReceiver) {
				\dainaCommandReceiver:receiveCommandToAnalyseAndSynthesiseSyntaxTree
			}
	}

	~ parseCommandToCompileIntoJavaWithinDirectory *{
		\::newParsingActionUsingParsingActionToParseCommandWithCommandStringSegmentProviderAndThenSendCommandToReceiver
			*([->[String]] getNextCommandStringSegment, [DainaCommandReceiver] dainaCommandReceiver) {
				\dainaCommandReceiver:receiveCommandToCompileIntoJavaWithinDirectory (\getNextCommandStringSegment)
			}
	}

	~ parseCommandToCompileIntoCWithinDirectory *{
		\::newParsingActionUsingParsingActionToParseCommandWithCommandStringSegmentProviderAndThenSendCommandToReceiver
			*([->[String]] getNextCommandStringSegment, [DainaCommandReceiver] dainaCommandReceiver) {
				\dainaCommandReceiver:receiveCommandToCompileIntoCWithinDirectory (\getNextCommandStringSegment)
			}
	}

	~ parseInvalidCommand *{
		\::newParsingActionUsingParsingActionToParseCommandWithCommandStringSegmentProviderAndThenSendCommandToReceiver
			*([->[String]] getNextCommandStringSegment, [DainaCommandReceiver] dainaCommandReceiver) {
				\dainaCommandReceiver:receiveInvalidCommand
			}
	}

}





