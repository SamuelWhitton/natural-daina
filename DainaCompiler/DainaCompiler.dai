


[DainaCompiler : [Object]] (Object, DainaCommandInterface, DainaCommand, DainaSyntaxTree, File, String, DainaStatusReporter@@, DainaToJavaCompiler, DainaToCCompiler@@) 
	[DainaSyntaxTree] syntaxTreeRepresentingParsedProgram
	[DainaCommandInterface] dainaCommandInterface
{
	~ newDainaCompiler *{
		\::newObject;
		.dainaCommandInterface = \[DainaCommandInterface]:newDainaCommandInterface;
		.syntaxTreeRepresentingParsedProgram = \[DainaSyntaxTree]:newEmptySyntaxTree;
	}

	++ runDainaCompiler *{
		\.dainaCommandInterface:receiveCommandsFromUserUntilExitCommandIsReceivedWithCommandReceiver
		 	:performCorrespondingActionForDainaCommand;
	}

	- performCorrespondingActionForDainaCommand *([DainaCommand] dainaCommandInQuestion) {
		\dainaCommandInQuestion:ifCommandIsParseDainaSourceFile loadSourceFileWithNameAndParseIntoSyntaxTreeRepresentingParsedProgram;
		\dainaCommandInQuestion:ifCommandIsAnalyseAndSynthesiseSyntaxTree analyseAndSynthesiseSyntaxTreeRepresentingParsedProgram;
		\dainaCommandInQuestion:ifCommandIsCompileToJavaInDirectory compileSyntaxTreeIntoJavaWithinGivenDirectory;
		\dainaCommandInQuestion:ifCommandIsCompileToCInDirectory compileSyntaxTreeIntoCWithinGivenDirectory;
	} !	{
			[DainaStatusReporter] dainaStatusReporter = (\.dainaCommandInterface:provideDainaStatusReporter);
			[[String]->] loadSourceFileWithNameAndParseIntoSyntaxTreeRepresentingParsedProgram = *([String] nameOfDainaSourceFile) {
				@[File] dainaSourceFile = \[File]:readFileWithName nameOfDainaSourceFile;
				@\.syntaxTreeRepresentingParsedProgram:parseDainaSourceFileIntoSyntaxTreeWithStatusReporter dainaSourceFile dainaStatusReporter;
			}
			[->] analyseAndSynthesiseSyntaxTreeRepresentingParsedProgram = *{
				@\.syntaxTreeRepresentingParsedProgram:analyseAndSynthesiseSyntaxTreeWithStatusReporter dainaStatusReporter;
			}
			[[String]->] compileSyntaxTreeIntoJavaWithinGivenDirectory = *([String] javaCompilationDirectory) {
				@[DainaToJavaCompiler] dainaToJavaCompiler = \[DainaToJavaCompiler]:newCompilerWithStatusReporter dainaStatusReporter;
				@\dainaToJavaCompiler:compileDainaSyntaxTreeIntoDirectory .syntaxTreeRepresentingParsedProgram javaCompilationDirectory;
			}
			[[String]->] compileSyntaxTreeIntoCWithinGivenDirectory = *([String] cCompilationDirectory) {
				@[DainaToCCompiler] dainaToCCompiler = \[DainaToCCompiler]:newCompilerWithStatusReporter dainaStatusReporter;
				@\dainaToCCompiler:compileDainaSyntaxTreeIntoDirectory .syntaxTreeRepresentingParsedProgram cCompilationDirectory;
			}
		}
}


