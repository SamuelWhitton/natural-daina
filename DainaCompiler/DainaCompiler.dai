
[DainaCompiler : [DainaCommandReceiver]] (
		Object, 
		DainaCommandInterface, 
		GeneralDainaStatus, 
		DainaSyntaxTree, 
		DainaCommandReceiver, 
		File, 
		String, 
		DainaNamespaceReference,
		DainaStatusReporter@@, DainaToJavaCompiler, DainaToCCompiler@@
	) 
	[DainaSyntaxTree] syntaxTreeRepresentingParsedProgram
	[DainaStatusReporter] reporterToReportCompilerStatus
{
	~ newDainaCompilerReadyToReceiveDainaCommandsWithReporterToReportCompilerStatus *([DainaStatusReporter] reporterToReportCompilerStatus){
		\::newDainaCommandReceiver;
		.syntaxTreeRepresentingParsedProgram = \[DainaSyntaxTree]:newEmptySyntaxTree;
		.reporterToReportCompilerStatus = reporterToReportCompilerStatus;
		\reporterToReportCompilerStatus:reportStatus (\[GeneralDainaStatus]:DAINA_COMPILER_STARTED);
	}

	|++ receiveCommandToParseDainaSourceFileWithPathAndNamespaceSelection *([String] dainaSourceFilePath, [DainaNamespaceReference] dainaNamespaceSelection){
		@[File] dainaSourceFile = \[File]:readFileWithName nameOfDainaSourceFile;
		@\.syntaxTreeRepresentingParsedProgram:parseDainaSourceFileIntoSyntaxTreeWithStatusReporter dainaSourceFile dainaStatusReporter;
	}

	|++ receiveCommandToAnalyseAndSynthesiseSyntaxTree *{
		@\.syntaxTreeRepresentingParsedProgram:analyseAndSynthesiseSyntaxTreeWithStatusReporter dainaStatusReporter;
	}

	|++ receiveCommandToCompileIntoJavaWithinDirectory *([String] javaCompilationDirectory){
		@[DainaToJavaCompiler] dainaToJavaCompiler = \[DainaToJavaCompiler]:newCompilerWithStatusReporter dainaStatusReporter;
		@\dainaToJavaCompiler:compileDainaSyntaxTreeIntoDirectory .syntaxTreeRepresentingParsedProgram javaCompilationDirectory;
	}

	|++ receiveCommandToCompileIntoCWithinDirectory *([String] cCompilationDirectory){
		@[DainaToCCompiler] dainaToCCompiler = \[DainaToCCompiler]:newCompilerWithStatusReporter dainaStatusReporter;
		@\dainaToCCompiler:compileDainaSyntaxTreeIntoDirectory .syntaxTreeRepresentingParsedProgram cCompilationDirectory;
	}
}





