[DainaCommandInterface : [Object]] (Object, DainaStatusReporter, InputStream, OutputStream, SystemInputOutput,
									String, Variable, ControlFlow, DainaCommand, Boolean)
	[InputStream] commandInputStream
	[DainaStatusReporter] dainaStatusReporter
{

	~ newDainaCommandInterface *() {
		\::newObject;
		.commandInputStream = commandInputStream;
		.dainaStatusReporter = \[DainaStatusReporter]:statusReporterWithOutputStreamToReceiveStatus statusOutputStream;
	} !{
			[InputStream] commandInputStream = \[SystemInputOutput]:stdinInputStream;
			[OutputStream] statusOutputStream = \[SystemInputOutput]:stdoutOutputStream;
		}

	++ receiveCommandsFromUserUntilExitCommandIsReceivedWithCommandReceiver *([[DainaCommand]->] receiveCommand) {
		\.dainaStatusReporter:reportStatusThatDainaCommandReceiverIsNowReceivingCommands;
		\[ControlFlow]:repeatUntilStopped receiveCommandsAndStopWhenExitCommandIsReceived
		!{
			[[->]->] receiveCommandsAndStopWhenExitCommandIsReceived = *([->] stopReceivingCommands) {
				
				\nextCommandIsExit:ifTrue stopReceivingCommands;
				\nextCommandIsParseDainaSourceFile:ifTrue *{
					\receiveCommand (\[DainaCommand]:commandToParseDainaSourceFile (\:getNextCommandStringInput))};
				\nextCommandIsAnalyseAndSynthesiseSyntaxTree:ifTrue *{
					\receiveCommand (\[DainaCommand]:commandToAnalyseAndSynthesiseSyntaxTree)};
				\nextCommandIsCompileToJavaInDirectory:ifTrue *{
					\receiveCommand (\[DainaCommand]:commandToCompileToJavaInDirectory (\:getNextCommandStringInput))};
				\nextCommandIsCompileToCInDirectory:ifTrue *{
					\receiveCommand (\[DainaCommand]:commandToCompileToCInDirectory (\:getNextCommandStringInput))};
				\nextCommandIsInvalid:ifTrue *{
					\.dainaStatusReporter:reportStatusInvalidCommand};
			}	!{
					[String] nextCommand = \:getNextCommandStringInput;
					[Boolean] nextCommandIsExit = \nextCommand:isEqualTo \[DainaCommand]:exitCommandString;
					[Boolean] nextCommandIsParseDainaSourceFile = \nextCommand:isEqualTo \[DainaCommand]:parseDainaSourceFileCommandString;
					[Boolean] nextCommandIsAnalyseAndSynthesiseSyntaxTree = \nextCommand:isEqualTo \[DainaCommand]:analyseAndSynthesiseSyntaxTreeCommandString;
					[Boolean] nextCommandIsCompileToJavaInDirectory = \nextCommand:isEqualTo \[DainaCommand]:compileToJavaInDirectoryCommandString;
					[Boolean] nextCommandIsCompileToCInDirectory = \nextCommand:isEqualTo \[DainaCommand]:compileToCInDirectoryCommandString;
					[Boolean] nextCommandIsInvalid = \[Boolean]:logicalNOT (\[Boolean]:logicalOR (\[Boolean]:logicalOR (\[Boolean]:logicalOR (\[Boolean]:logicalOR nextCommandIsExit nextCommandIsParseDainaSourceFile) nextCommandIsAnalyseAndSynthesiseSyntaxTree) nextCommandIsCompileToJavaInDirectory) nextCommandIsCompileToCInDirectory)
				}
		};
		\.dainaStatusReporter:reportStatusThatDainaCommandReceiverIsStoppingSinceExitCommandWasReceived	
	}

	- getNextCommandStringInput *()->[String] {} -> \.commandInputStream:parseDataAsStringUntilNewlineOrEndOfFile

	++ provideDainaStatusReporter *-> .dainaStatusReporter
}

