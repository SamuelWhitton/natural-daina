
[] (DainaCommandLineApplication) {
	^ *{
		\[DainaCommandLineApplication]:runApplication;
	}
}


[DainaCommandLineApplication] (
		DainaCompiler, 
		DainaCommandLineInterface, 
		DainaCommandLineCommandReceiver,
		ControlFlow, 
		DainaStatusReporter, 
		FilingSystem, 
		SystemInputOutput,
		DainaExitCommandListener
	) 
{
	:: runApplication *{
		[DainaCommandLineInterface] dainaCommandLineInterface = \[DainaCommandLineInterface]:newDainaCommandLineInterfaceReadyToReceiveCommands;
		[DainaStatusReporter] statusReporterForCompiler = \dainaCommandLineInterface:provideDainaStatusReporterWhichReportsToThisCommandInterface;
		[DainaCompiler] dainaCompiler = \[DainaCompiler]:newDainaCompilerReadyToReceiveDainaCommandsWithReporterToReportCompilerStatusAndFilingSystemForReadingAndWritingFiles statusReporterForCompiler filingSystemForCompilationInputAndOutputFiles;
		\sendValidCommandsFromCommandInterfaceToDainaCompilerAndStopOnceExitCommandIsReceived dainaCommandLineInterface dainaCompiler;
	}	!{
			[[DainaCommandLineInterface][DainaCompiler]->] sendValidCommandsFromCommandInterfaceToDainaCompilerAndStopOnceExitCommandIsReceived = *([DainaCommandLineInterface] dainaCommandLineInterface, [DainaCompiler] dainaCompiler) {
				\[ControlFlow]:repeatUntilStopped *([->] stopListeningToCommands){
					[DainaExitCommandListener] commandListenerToStopOnExitCommandAndSendOtherCommandsToDainaCompiler = \[DainaExitCommandListener]:newDainaExitCommandListenerWithExitCommandReceivedCallbackAndReceiverToReceiveDainaCommands stopListeningToCommands dainaCompiler;
					\dainaCommandLineInterface:processNextUserCommandAndSendingValidCommandsToCommandReceiver commandListenerToStopOnExitCommandAndSendOtherCommandsToDainaCompiler;
				}
			};
			[FilingSystem] filingSystemForCompilationInputAndOutputFiles = (\[FilingSystem]:newFilingSystemWithFilePathToInputStreamProviderAndFilePathToOutputStreamProvider ([SystemInputOutput]:maybeInputStreamForFileWithFilename) ([SystemInputOutput]:maybeOutputStreamForFileWithFilename));
		}
}

[DainaExitCommandListener : [DainaCommandLineCommandReceiver]] (
		DainaCommandLineCommandReceiver,
		DainaCommandReceiver
	) -> (
			DainaCommandLineApplication
		)
	[->] exitCommandReceivedCallback
{
	~ newDainaExitCommandListenerWithExitCommandReceivedCallbackAndReceiverToReceiveDainaCommands *([->]exitCommandReceivedCallback, [DainaCommandReceiver] receiverToReceiveDainaCommands) {
		\::newDainaCommandLineCommandReceiverWithDainaCommandReceiverToReceiveDainaCommands receiverToReceiveDainaCommands;
		.exitCommandReceivedCallback = exitCommandReceivedCallback;
	}
	|++ receiveExitCommand *{\.exitCommandReceivedCallback}
}








